{
    "contents" : "pkgname <- \"GWRM\"\nsource(file.path(R.home(\"share\"), \"R\", \"examples-header.R\"))\noptions(warn = 1)\noptions(pager = \"console\")\nbase::assign(\".ExTimings\", \"GWRM-Ex.timings\", pos = 'CheckExEnv')\nbase::cat(\"name\\tuser\\tsystem\\telapsed\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'))\nbase::assign(\".format_ptime\",\nfunction(x) {\n  if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]\n  if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]\n  options(OutDec = '.')\n  format(x[1L:3L], digits = 7L)\n},\npos = 'CheckExEnv')\n\n### * </HEADER>\nlibrary('GWRM')\n\nbase::assign(\".oldSearch\", base::search(), pos = 'CheckExEnv')\ncleanEx()\nnameEx(\"add1.gw\")\n### * add1.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: add1.gw\n### Title: Add All Possible Single Terms to a GWRM Model\n### Aliases: add1.gw\n\n### ** Examples\n\ndata(goals)\nfit0 <- gw(goals ~ offset(log(played)), data = goals)\nsummary(fit0)\n\nfit1 <- add1(fit0, ~ position)\nsummary(fit1)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"add1.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"drop1.gw\")\n### * drop1.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: drop1.gw\n### Title: Drop All Possible Single Terms to a GWRM Model\n### Aliases: drop1.gw\n\n### ** Examples\n\ndata(goals)\n\nfit0 <- gw(goals ~ offset(log(played)), data = goals)\nsummary(fit0)\n\nfit1 <- step(fit0, ~ position)\nsummary(fit1)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"drop1.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"extractAIC.gw\")\n### * extractAIC.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: extractAIC.gw\n### Title: Extract AIC\n### Aliases: extractAIC.gw\n\n### ** Examples\n\nfit<-gw(goals~played,data=goals)\nextractAIC(fit)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"extractAIC.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"gw\")\n### * gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: gw\n### Title: Genaralizing Waring Regression\n### Aliases: gw\n\n### ** Examples\n\ngw(goals~played+position,data=goals)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"gw.fit\")\n### * gw.fit\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: gw.fit\n### Title: Genaralizing Waring Regression\n### Aliases: gw.fit\n\n### ** Examples\n\ngw(goals~played+position,data=goals)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"gw.fit\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"logLik.gw\")\n### * logLik.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: logLik.gw\n### Title: Extract Log-Likelihood\n### Aliases: logLik.gw\n\n### ** Examples\n\nobject<-gw(goals~played,data=goals)\nlogLik(object)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"logLik.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"partvar\")\n### * partvar\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: partvar\n### Title: Partition of the variance in a GWRM model\n### Aliases: partvar\n\n### ** Examples\n\ndata(goals)\nfit <- gw(goals ~ position, data = goals)\npos <- factor(c(\"Defender\", \"Midfielder\"), levels = c(\"Defender\", \"Midfielder\", \"Forward\"))\nlev <- data.frame(position = pos, played = c(17, 21))\n\npartvar(fit, newdata = lev)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"partvar\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"predict.gw\")\n### * predict.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: predict.gw\n### Title: Predict Method for GW Fits\n### Aliases: predict.gw\n\n### ** Examples\n\ndata(goals)\nfit <- gw(goals ~ position, data = goals)\npredict(fit)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"predict.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"print.gw\")\n### * print.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: print.gw\n### Title: Print a GWRM model\n### Aliases: print.gw\n\n### ** Examples\n\ndata(goals)\nfit <- gw(goals ~ position, data = goals)\nprint(fit)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"print.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"residuals.gw\")\n### * residuals.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: residuals.gw\n### Title: Extract and Visualize Model Residuals\n### Aliases: residuals.gw\n\n### ** Examples\n\ndata(goals)\nfit0 <- gw(goals ~ position, data = goals)\nresiduals(fit0, type = \"pearson\", rep = 19, envelope = TRUE, trace = FALSE)\n\nresiduals(fit0, type = \"pearson\", rep = 19, envelope = TRUE,trace = FALSE, parallel=TRUE)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"residuals.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"rgw\")\n### * rgw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: rgw\n### Title: Genaralizing Waring\n### Aliases: rgw\n\n### ** Examples\n\nrgw(10,2,2,2)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"rgw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\ncleanEx()\nnameEx(\"summary.gw\")\n### * summary.gw\n\nflush(stderr()); flush(stdout())\n\nbase::assign(\".ptime\", proc.time(), pos = \"CheckExEnv\")\n### Name: summary.gw\n### Title: Summarizing GWRM model Fits\n### Aliases: summary.gw\n\n### ** Examples\n\ndata(goals)\nfit <- gw(goals ~ position, data = goals)\nsummary(fit)\n\n\n\nbase::assign(\".dptime\", (proc.time() - get(\".ptime\", pos = \"CheckExEnv\")), pos = \"CheckExEnv\")\nbase::cat(\"summary.gw\", base::get(\".format_ptime\", pos = 'CheckExEnv')(get(\".dptime\", pos = \"CheckExEnv\")), \"\\n\", file=base::get(\".ExTimings\", pos = 'CheckExEnv'), append=TRUE, sep=\"\\t\")\n### * <FOOTER>\n###\noptions(digits = 7L)\nbase::cat(\"Time elapsed: \", proc.time() - base::get(\"ptime\", pos = 'CheckExEnv'),\"\\n\")\ngrDevices::dev.off()\n###\n### Local variables: ***\n### mode: outline-minor ***\n### outline-regexp: \"\\\\(> \\\\)?### [*]+\" ***\n### End: ***\nquit('no')\n",
    "created" : 1437671984028.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2212077688",
    "id" : "290875DF",
    "lastKnownWriteTime" : 1437671891,
    "path" : "E:/glm.wa/GWRM.Rcheck/GWRM-Ex.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}